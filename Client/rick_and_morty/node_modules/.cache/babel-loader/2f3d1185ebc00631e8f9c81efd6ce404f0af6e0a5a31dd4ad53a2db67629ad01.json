{"ast":null,"code":"const validation = userData => {\n  // Esta fn recibe como parámetro el estado userData\n  const errors = {}; // Inicializo un obj vacío porque al final esta fn me debe retornar un obj. En este obj voy a ir guardando los errores que encuentre tanto en la propiedad email como en password.\n\n  if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\n    errors.email = 'El email ingresado NO es válido'; // Si la propiedad userData NO es un email, creo una propiedad en mi obj errors con un msj.\n  }\n\n  if (!userData.email) {\n    // userData.email.length === ''\n    errors.email = 'Debe ingresar un email';\n  }\n  if (userData.email.length > 35) {\n    errors.email = 'El email NO debe superar los 35 caracteres';\n  }\n  if (!/.*\\d+.*/.test(userData.password)) {\n    errors.password = 'La contraseña tiene que tener al menos un número';\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = 'La contraseña debe tener entre 6 y 10 caracteres';\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","test","email","length","password"],"sources":["/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Validation/Validation.js"],"sourcesContent":["const validation = (userData) => {  // Esta fn recibe como parámetro el estado userData\n  const errors = {};                // Inicializo un obj vacío porque al final esta fn me debe retornar un obj. En este obj voy a ir guardando los errores que encuentre tanto en la propiedad email como en password.\n\n  if(!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\n    errors.email = 'El email ingresado NO es válido';  // Si la propiedad userData NO es un email, creo una propiedad en mi obj errors con un msj.\n  }\n\n  if(!userData.email) {  // userData.email.length === ''\n    errors.email = 'Debe ingresar un email';\n  }\n\n  if(userData.email.length > 35) {\n    errors.email = 'El email NO debe superar los 35 caracteres';\n  }\n\n  if(!/.*\\d+.*/.test(userData.password)) {\n    errors.password = 'La contraseña tiene que tener al menos un número';\n  }\n\n  if(userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = 'La contraseña debe tener entre 6 y 10 caracteres';\n  }\n\n  return errors;\n};\n\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAK;EAAG;EAClC,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAgB;;EAElC,IAAG,CAAC,cAAc,CAACC,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,EAAE;IACvCF,MAAM,CAACE,KAAK,GAAG,iCAAiC,CAAC,CAAE;EACrD;;EAEA,IAAG,CAACH,QAAQ,CAACG,KAAK,EAAE;IAAG;IACrBF,MAAM,CAACE,KAAK,GAAG,wBAAwB;EACzC;EAEA,IAAGH,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IAC7BH,MAAM,CAACE,KAAK,GAAG,4CAA4C;EAC7D;EAEA,IAAG,CAAC,SAAS,CAACD,IAAI,CAACF,QAAQ,CAACK,QAAQ,CAAC,EAAE;IACrCJ,MAAM,CAACI,QAAQ,GAAG,kDAAkD;EACtE;EAEA,IAAGL,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IAChEH,MAAM,CAACI,QAAQ,GAAG,kDAAkD;EACtE;EAEA,OAAOJ,MAAM;AACf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}