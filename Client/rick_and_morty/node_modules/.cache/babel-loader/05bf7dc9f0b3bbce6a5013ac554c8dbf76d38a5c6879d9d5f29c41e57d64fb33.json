{"ast":null,"code":"var _jsxFileName = \"/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Detail.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const params = useParams();\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        window.alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({});\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soy el detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"ralI/zMDqAovpeHzNWc9gH7kUvw=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["axios","useParams","useState","useEffect","jsxDEV","_jsxDEV","Detail","_s","params","character","setCharacter","id","then","data","name","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Detail.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Detail = () => {\n  const params = useParams();\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`)\n    .then(({ data }) => {\n       if (data.name) {\n          setCharacter(data);\n       } else {\n          window.alert('No hay personajes con ese ID');\n       }\n    });\n    return setCharacter({});\n }, [id]);\n\n  return(\n    <div>\n      <h1>Soy el detail</h1>\n    </div>\n  );\n};\n\nexport default Detail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACdH,KAAK,CAAE,6CAA4CW,EAAG,EAAC,CAAC,CACvDC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACjB,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZJ,YAAY,CAACG,IAAI,CAAC;MACrB,CAAC,MAAM;QACJE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACH,CAAC,CAAC;IACF,OAAON,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC;EAEP,oBACEN,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAAY,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACd,EAAA,CArBID,MAAM;EAAA,QACKL,SAAS;AAAA;AAAAqB,EAAA,GADpBhB,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}