{"ast":null,"code":"var _jsxFileName = \"/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/Client/rick_and_morty/src/components/Detail/Detail.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  var _character$origin;\n  const {\n    id\n  } = useParams(); //Es posible hacer Destructuring porque useParams() me entrega un objeto con la propiedad id (porque su ruta es: /detail/:id) . Así accedo a su valor.\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({});\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Name: \", character === null || character === void 0 ? void 0 : character.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Status: \", character === null || character === void 0 ? void 0 : character.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Species: \", character === null || character === void 0 ? void 0 : character.species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Gender: \", character === null || character === void 0 ? void 0 : character.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Origin: \", character === null || character === void 0 ? void 0 : (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character === null || character === void 0 ? void 0 : character.image,\n      alt: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"6HTCr1TClwySIPkOyZ8puLIIZ9c=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["axios","useParams","useState","useEffect","jsxDEV","_jsxDEV","Detail","_s","_character$origin","id","character","setCharacter","then","data","name","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/Client/rick_and_morty/src/components/Detail/Detail.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Detail = () => {\n  const { id } = useParams(); //Es posible hacer Destructuring porque useParams() me entrega un objeto con la propiedad id (porque su ruta es: /detail/:id) . Así accedo a su valor.\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`)\n    .then(({ data }) => {\n       if (data.name) {\n          setCharacter(data);\n       } else {\n          alert('No hay personajes con ese ID');\n       }\n    });\n    return setCharacter({});\n }, [id]);\n\n  return(\n    <div>\n      { /* FORMA 1 (COERCIÓN DE DATOS)\n        character && <div>\n          <h2>{character.name}</h2>\n          <h2>{character.status}</h2>\n          <h2>{character.species}</h2>\n          <h2>{character.gender}</h2>\n          <h2>{character.origin?.name}</h2>\n          <img src={character.image} alt=''/>\n        </div> \n        \n        FORMA 2 (OPERADOR TERNARIO) \n\n        character ? <div>\n        <h2>{character.name}</h2>\n        <h2>{character.status}</h2>\n        <h2>{character.species}</h2>\n        <h2>{character.gender}</h2>\n        <h2>{character.origin?.name}</h2>\n        <img src={character.image} alt=''/>\n        </div> : null  \n        */\n      }\n      \n      <h2>Name: {character?.name}</h2>\n      <h2>Status: {character?.status}</h2>\n      <h2>Species: {character?.species}</h2>\n      <h2>Gender: {character?.gender}</h2>\n      <h2>Origin: {character?.origin?.name}</h2>\n      <img src={character?.image} alt={character.name}/>\n    </div>\n  );\n};\n\nexport default Detail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACdH,KAAK,CAAE,gDAA+CS,EAAG,EAAC,CAAC,CAC1DG,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACjB,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZH,YAAY,CAACE,IAAI,CAAC;MACrB,CAAC,MAAM;QACJE,KAAK,CAAC,8BAA8B,CAAC;MACxC;IACH,CAAC,CAAC;IACF,OAAOJ,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EAEP,oBACEJ,OAAA;IAAAW,QAAA,gBAwBEX,OAAA;MAAAW,QAAA,GAAI,QAAM,EAACN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,IAAI;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCf,OAAA;MAAAW,QAAA,GAAI,UAAQ,EAACN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEW,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCf,OAAA;MAAAW,QAAA,GAAI,WAAS,EAACN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEY,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCf,OAAA;MAAAW,QAAA,GAAI,UAAQ,EAACN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCf,OAAA;MAAAW,QAAA,GAAI,UAAQ,EAACN,SAAS,aAATA,SAAS,wBAAAF,iBAAA,GAATE,SAAS,CAAEc,MAAM,cAAAhB,iBAAA,uBAAjBA,iBAAA,CAAmBM,IAAI;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1Cf,OAAA;MAAKoB,GAAG,EAAEf,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgB,KAAM;MAACC,GAAG,EAAEjB,SAAS,CAACI;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACb,EAAA,CAjDID,MAAM;EAAA,QACKL,SAAS;AAAA;AAAA2B,EAAA,GADpBtB,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}