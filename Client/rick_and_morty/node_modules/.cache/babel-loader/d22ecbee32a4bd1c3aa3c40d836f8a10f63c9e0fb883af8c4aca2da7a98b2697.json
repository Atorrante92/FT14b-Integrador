{"ast":null,"code":"var _jsxFileName = \"/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Detail.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); //Es posible hacer Destructuring porque useParams() me entrega un objeto con la propiedad id (porque su ruta es: /detail/:id) . Así accedo a su valor.\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        window.alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({});\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children:\n    /* FORMA 1 (COERCIÓN DE DATOS)\n     character && <div>\n       <h2>{character.name}</h2>\n       <h2>{character.status}</h2>\n       <h2>{character.species}</h2>\n       <h2>{character.gender}</h2>\n       <h2>{character.origin.name}</h2>\n       <img src={character.image} alt=''/>\n     </div> \n     \n     FORMA 2 (OPERADOR TERNARIO) */\n\n    character ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.species\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.origin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"6HTCr1TClwySIPkOyZ8puLIIZ9c=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["axios","useParams","useState","useEffect","jsxDEV","_jsxDEV","Detail","_s","id","character","setCharacter","then","data","name","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Detail.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Detail = () => {\n  const { id } = useParams(); //Es posible hacer Destructuring porque useParams() me entrega un objeto con la propiedad id (porque su ruta es: /detail/:id) . Así accedo a su valor.\n  const [character, setCharacter] = useState({}); // La fn useState me entrega un array con dos elementos(un estado y la fn que modifica dicho estado) ===> characters = {}\n\n  useEffect(() => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`)\n    .then(({ data }) => {\n       if (data.name) {\n          setCharacter(data);\n       } else {\n          window.alert('No hay personajes con ese ID');\n       }\n    });\n    return setCharacter({});\n }, [id]);\n\n  return(\n    <div>\n      {/* FORMA 1 (COERCIÓN DE DATOS)\n        character && <div>\n          <h2>{character.name}</h2>\n          <h2>{character.status}</h2>\n          <h2>{character.species}</h2>\n          <h2>{character.gender}</h2>\n          <h2>{character.origin.name}</h2>\n          <img src={character.image} alt=''/>\n        </div> \n        \n        FORMA 2 (OPERADOR TERNARIO) */\n\n        character ? <div>\n        <h2>{character.name}</h2>\n        <h2>{character.status}</h2>\n        <h2>{character.species}</h2>\n        <h2>{character.gender}</h2>\n        <h2>{character.origin.name}</h2>\n        <img src={character.image} alt=''/>\n        </div> : null  \n        \n      }\n      \n      {/* <h2>{character?.name}</h2>\n      <h2>{character?.status}</h2>\n      <h2>{character?.species}</h2>\n      <h2>{character?.gender}</h2>\n      <h2>{character?.origin?.name}</h2>\n      <img src={character?.image} alt={character.name}/> */}\n    </div>\n  );\n};\n\nexport default Detail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACdH,KAAK,CAAE,6CAA4CQ,EAAG,EAAC,CAAC,CACvDG,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACjB,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZH,YAAY,CAACE,IAAI,CAAC;MACrB,CAAC,MAAM;QACJE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACH,CAAC,CAAC;IACF,OAAOL,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EAEP,oBACEH,OAAA;IAAAW,QAAA;IACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQP,SAAS,gBAAGJ,OAAA;MAAAW,QAAA,gBACZX,OAAA;QAAAW,QAAA,EAAKP,SAAS,CAACI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBf,OAAA;QAAAW,QAAA,EAAKP,SAAS,CAACY;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Bf,OAAA;QAAAW,QAAA,EAAKP,SAAS,CAACa;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5Bf,OAAA;QAAAW,QAAA,EAAKP,SAAS,CAACc;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Bf,OAAA;QAAAW,QAAA,EAAKP,SAAS,CAACe,MAAM,CAACX;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCf,OAAA;QAAKoB,GAAG,EAAEhB,SAAS,CAACiB,KAAM;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,GAAG;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUZ,CAAC;AAEV,CAAC;AAACb,EAAA,CAjDID,MAAM;EAAA,QACKL,SAAS;AAAA;AAAA2B,EAAA,GADpBtB,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}