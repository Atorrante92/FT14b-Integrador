{"ast":null,"code":"var _jsxFileName = \"/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport validation from '../Validation/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = event => {\n    // La fn handleChange registra cuando hay algún cambio dentro de los inputs, modifica el estado userData y valida dichos cambios.\n\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n    setErrors(validation({\n      // Ejecuto la fn que valida y le paso por parámetro el Estado( userData: que es el obj donde guardo toda la info que ingresa el usuario). Deseo validad cada vez que ocurran cambios en tiempo real en el input(dentro de handleChange).\n      ...userData,\n      // La fn validation va a retornar un obj. Si tengo una ejecución de función, eso sera = a lo que retorna dicha fn. Necesito que el obj que retorne la fn validation se me guarde en el estado errors.\n      [event.target.name]: event.target.value // Si sucede algún cambio, con esta línea le aviso que debe modificar alguna de sus propiedades\n    })); // en realidad lo que está retornanto la fn validation es un obj (que si encuentra algún error) que en la propiedad email o la propiedad password tengan msjs de error.\n  };\n\n  const handleSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: userData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: userData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"uXbc/ZKkxRGsmQU58IB9CAVlzEk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","validation","jsxDEV","_jsxDEV","Form","_s","userData","setUserData","email","password","errors","setErrors","handleChange","event","target","name","value","handleSubmit","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","color","_c","$RefreshReg$"],"sources":["/Users/alenfernandooviedolagos/Desktop/App Rick and Morty/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport validation from '../Validation/Validation';\n\nconst Form = () => {\n\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (event) => {  // La fn handleChange registra cuando hay algún cambio dentro de los inputs, modifica el estado userData y valida dichos cambios.\n    \n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n\n    setErrors(validation({  // Ejecuto la fn que valida y le paso por parámetro el Estado( userData: que es el obj donde guardo toda la info que ingresa el usuario). Deseo validad cada vez que ocurran cambios en tiempo real en el input(dentro de handleChange).\n      ...userData,          // La fn validation va a retornar un obj. Si tengo una ejecución de función, eso sera = a lo que retorna dicha fn. Necesito que el obj que retorne la fn validation se me guarde en el estado errors.\n      [event.target.name]: event.target.value   // Si sucede algún cambio, con esta línea le aviso que debe modificar alguna de sus propiedades\n    }));                                        // en realidad lo que está retornanto la fn validation es un obj (que si encuentra algún error) que en la propiedad email o la propiedad password tengan msjs de error.\n  };\n\n  const handleSubmit = () => {\n\n  };\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <label htmlFor='email'>Email:</label>\n      <input type='email' name='email' value={userData.email} onChange={handleChange} />\n      {errors.email && <p style={{color: 'red'}}>{errors.email}</p>}  {/*Renderizado condicional: si existe un error en la propiedad email, muestro dicha propiedad (que es un msj de error)*/}\n      <hr />\n\n      <label htmlFor='password'>Password:</label>\n      <input type='password' name='password' value={userData.password} onChange={handleChange} />\n      {errors.password && <p style={{color: 'red'}}>{errors.password}</p>}\n      <hr />\n\n      <button>Submit</button>\n    </form>\n  );\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}